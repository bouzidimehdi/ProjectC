@page
@model CheckoutModel
@using static AddKeyModel
@{
    float totalz = 0;
    int i = 0;
    bool completed = false;
}
<script src="https://www.paypalobjects.com/api/checkout.js"></script>
<script>
    // Render the PayPal button
    paypal.Button.render({
        // Set your environment
        env: 'sandbox', // sandbox | production

        // Specify the style of the button
        style: {
            layout: 'vertical',  // horizontal | vertical
            size: 'medium',    // medium | large | responsive
            shape: 'rect',      // pill | rect
            color: 'gold'       // gold | blue | silver | white | black
        },

        // Specify allowed and disallowed funding sources
        //
        // Options:
        // - paypal.FUNDING.CARD
        // - paypal.FUNDING.CREDIT
        // - paypal.FUNDING.ELV
        funding: {
            allowed: [
                paypal.FUNDING.CARD,
                paypal.FUNDING.CREDIT
            ],
            disallowed: []
        },

        // PayPal Client IDs - replace with your own
        // Create a PayPal app: https://developer.paypal.com/developer/applications/create
        client: {
            sandbox: 'AbkpTYViWloGJrvvueH7VjvKdO48IELUV2kZBk2lxTkaCIswmeuZ0MziHWpS21xM5P4vyqW8Uu8r83xF',
            production: '<insert production client id>'
        },

        payment: function (data, actions) {
            return actions.payment.create({
                payment: {
                    transactions: [
                        {
                            amount: {
                                total: '0.01',
                                currency: 'USD'
                            }
                        }
                    ]
                }
            });
        },

        onAuthorize: function (data, actions) {
            return actions.payment.execute()
                .then(function () {
                    window.alert('Payment Complete!');
                    document.getElementById("aform").submit();
                });
        }
    }, '#paypal-button-container');
</script>


<h2>Checkout</h2>
@*@if (Model.YourCart == null)
    {
        <br />
        <h6>Oops! Your Cart is empty!</h6>
        return;
    }*@
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Price</th>
            <th>Quantity</th>
            <th>Your key(s)</th>
        </tr>
    </thead>
    <tbody>
        <form asp-page="AddKey" method="post" asp-page-handler="AddKey" id="aform">

            @foreach (var item in Model._Products)
            {
                @while (i < item.quantity)
                {

                    <tr>
                        <td></td>
                        <td>@item.product.ResponseName</td>
                        <td>@item.product.PriceFinal</td>
                        <td>@item.quantity</td>
                        @*<td>@Guid.NewGuid()</td>*@
                        <td></td>
                        @*<input type="hidden" name="productid" value="@item.product.ID" />*@
                        @*<input type="hidden" name="license" value="@Guid.NewGuid()" />*@
                        @*<input type="hidden" name="userid" value="@Model.id)" />*@

                    </tr>

                    i = i + 1;
                }
                i = 0;
            }
            @*<input type="submit" value="Add to DB" name="myForm" class="btn btn-default" />*@

        </form>
    </tbody>
</table>

<div id="paypal-button-container"></div>
@*@if (!User.Identity.IsAuthenticated)
{
    <div class="form-group">
        <label asp-for="Input.Email"></label>
        <input asp-for="Input.Email" class="form-control" />
        <span asp-validation-for="Input.Email" class="text-danger"></span>
    </div>
}*@





