@page
@model WebApplication1.Pages.Admin.AdminModel
@{
    ViewData["Title"] = "Admin";
}
<div>@Html.Partial("_StatusMessage", Model.StatusMessage1)</div>
<div>@Html.Partial("_StatusMessage", Model.StatusMessage2)</div>


@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
    <div class="container-fluid" style="padding-top:20px;">
        <div class="row">
            <div class="col-md-2" style="height:100%;">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <a asp-page="AdminCreateProduct" id="CreateProductAdminButton" class="nav-link">Create new product</a>
                    </li>
                    <li class="nav-item">
                        <a asp-page="UserManage" id="ManageUserredirict" class="nav-link">User Management</a>
                    </li>
                    <li class="nav-item">
                        <a asp-page="../Index" class="nav-link">Home</a>
                    </li>
                </ul>
            </div>
            <div class="col-md-1">
                <form method="post" id="JaarFilter">
                    <label asp-for="Input.jaar"></label>
                    <select asp-for="Input.jaar" onchange="document.getElementById('JaarFilter').submit();">
                        @for (int i = DateTime.Now.Year - 15; i <= DateTime.Now.Year; i++)
                        {
                            if (Model.Input.jaar == i)
                            {
                                <option value="@i" selected>@i</option>
                            }
                            else
                            {
                                <option value="@i">@i</option>
                            }
                        }
                    </select>
                </form>

                <button id="ChangeThis">CLick to change</button>
            </div>
            <div class="col-md-3">
                <div class="card">
                    <div class="card-body">
                        <p>Total users : @(Model.UnregisteredUsers.Count() + Model.RegisteredUsers.Count()) </p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card">
                    <div class="card-body">
                        <p>Orders selected year : @Model.AllOrders.Count()  </p>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card">
                    <div class="card-body">
                        <p>Sales selected year: @Model.SumOfOrders  </p>
                    </div>
                </div>
            </div>
            <div class="col-md-3"></div>
            <div class="col-md-3">
                <label>Total registerd users:</label>
                <canvas id="UsersGraph" width="100" height="100"></canvas>
            </div>
            <div class="col-6">
                <label>Monthly orders selected per year:</label>
                <canvas id="MonthlyOrders" style="width: 100%; height: 100%;"></canvas>
            </div>
            <div class="col-md-6"></div>
            <div class="col-md-6">
                <label>Monthly salales selected per year:</label>
                <canvas id="MonthlySales" width="300" height="100"></canvas>
            </div>
        </div>
    </div>

    <script>
        var ctx = document.getElementById("UsersGraph").getContext('2d');
        var UserGraphChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["Unconfirmed Users", "Confirmed Users"],
                datasets: [{

                    data: [@Model.UnregisteredUsers.Count(),@Model.RegisteredUsers.Count()],
                    backgroundColor: [

                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)'
                    ],
                    borderColor: [

                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)'
                    ],
                    borderWidth: 1
                }]
            }
           
        });
    </script>
    <script>
        var ctx = document.getElementById("MonthlyOrders").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',

            data: {
                labels: ["January", "Februari", "March", "April", "May", "June", "July", "August", "September", "Oktober","November","December"],
                datasets: [{
                    label: "Monthly Orders #",
                    data:
                    [@Model.AllOrdersAll[0].Count(),
                    @Model.AllOrdersAll[1].Count(),
                    @Model.AllOrdersAll[2].Count(),
                    @Model.AllOrdersAll[3].Count(),
                    @Model.AllOrdersAll[4].Count(),
                    @Model.AllOrdersAll[5].Count(),
                    @Model.AllOrdersAll[6].Count(),
                    @Model.AllOrdersAll[7].Count(),
                    @Model.AllOrdersAll[8].Count(),
                    @Model.AllOrdersAll[9].Count(),
                    @Model.AllOrdersAll[10].Count(),
                    @Model.AllOrdersAll[11].Count()     ],

                    backgroundColor: [

                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(124, 100, 86, 0.2)',
                        'rgba(50, 240, 192, 0.2)',

                        'rgba(254, 206, 86, 0.2)',
                        'rgba(73, 192, 192, 0.2)',
                        'rgba(123, 100, 86, 0.2)',
                        'rgba(49, 240, 192, 0.2)',

                        'rgba(253, 206, 86, 0.2)',
                        'rgba(76, 192, 192, 0.2)',
                        'rgba(125, 100, 86, 0.2)',
                        'rgba(51, 240, 192, 0.2)'

                    ],
                    borderColor: [

                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(124, 100, 86, 1)',
                        'rgba(50, 240, 192, 1)',

                        'rgba(254, 206, 86, 1)',
                        'rgba(74, 192, 192, 1)',
                        'rgba(123, 100, 86, 1)',
                        'rgba(49, 240, 192, 1)',

                        'rgba(253, 206, 86, 1)',
                        'rgba(76, 192, 192, 1)',
                        'rgba(125, 100, 86, 1)',
                        'rgba(51, 240, 192, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {

                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }
            }
        });
    </script>
    <script>
        var ctx = document.getElementById("MonthlySales").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',

            data: {
                labels: ["January", "Februari", "March", "April", "May", "June", "July", "August", "September", "Oktober","November","December"],
                datasets: [{
                    label: "Monthly Sales €",
                    data:      [Math.round(@Model.AllOrdersSales[0].Sum()),
                            Math.round(@Model.AllOrdersSales[1].Sum()),
                            Math.round(@Model.AllOrdersSales[2].Sum()),
                            Math.round(@Model.AllOrdersSales[3].Sum()),
                            Math.round(@Model.AllOrdersSales[4].Sum()),
                            Math.round(@Model.AllOrdersSales[5].Sum()),
                            Math.round(@Model.AllOrdersSales[6].Sum()),
                            Math.round(@Model.AllOrdersSales[7].Sum()),
                            Math.round(@Model.AllOrdersSales[8].Sum()),
                            Math.round(@Model.AllOrdersSales[9].Sum()),
                            Math.round(@Model.AllOrdersSales[10].Sum()),
                            Math.round(@Model.AllOrdersSales[11].Sum())],
                    backgroundColor: "rgba(255, 206, 86, 0.2)"


                    //backgroundColor: [

                    //    'rgba(255, 206, 86, 0.2)',
                    //    'rgba(75, 192, 192, 0.2)',
                    //    'rgba(124, 100, 86, 0.2)',
                    //    'rgba(50, 240, 192, 0.2)',

                    //    'rgba(254, 206, 86, 0.2)',
                    //    'rgba(73, 192, 192, 0.2)',
                    //    'rgba(123, 100, 86, 0.2)',
                    //    'rgba(49, 240, 192, 0.2)',

                    //    'rgba(253, 206, 86, 0.2)',
                    //    'rgba(76, 192, 192, 0.2)',
                    //    'rgba(125, 100, 86, 0.2)',
                    //    'rgba(51, 240, 192, 0.2)'

                    //],

                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                }
            }
        });
    </script>




    <script type="text/javascript">
        document.getElementById('ChangeThis').addEventListener('click', function () {

            UserGraphChart.destroy();
            var ctx = document.getElementById("UsersGraph").getContext('2d');
        var Newgraph = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: [" 2 Users", "3 Users"],
                datasets: [{

                    data: [2,3],
                    backgroundColor: [

                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)'
                    ],
                    borderColor: [

                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)'
                    ],
                    borderWidth: 1
                }]
            }
            });
            Newgraph.update();
            
            


        });
    </script>




}
else
{
    <div class="container">
        <div class="row">
            <div class="col-6" style="margin-top:10em;margin-bottom:10em;">
                <p>You are lost go to <a asp-page="/Index" class="btn btn-info">Home</a></p>
            </div>
        </div>
    </div>
    <script>
        window.location.replace("https://localhost:44358")
    </script>
}